{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../MapCard.svelte",
    "../PlayerRow.svelte",
    "../RollRow.svelte",
    "../ScoreRow.svelte",
    "../StageRow.svelte",
    "../TournamentRow.svelte",
    "../PlayerList.svelte",
    "../RollList.svelte",
    "../ScoreList.svelte",
    "../Stage.svelte",
    "../Tournament.svelte",
    "../Tournaments.svelte"
  ],
  "sourcesContent": [
    "<script>\n  export let title;\n  export let artist;\n  export let mapper;\n  export let difficulty;\n  export let beatmapId;\n  export let beatmapSetId;\n  export let hp;\n  export let od;\n  export let category;\n  export let counts;\n</script>\n\n<div class=\"root\">\n  <div class=\"title\">\n    <a href={`https://osu.ppy.sh/beatmapsets/${beatmapSetId}#mania/${beatmapId}`} target=\"_blank\">\n      <div class=\"artist\">{artist}</div>\n      <div class=\"name\" title={title}>{title}</div>\n    </a>\n    <div class=\"mapper\">\n      <b>[{difficulty}]</b><br />beatmap set by <b>{mapper}</b>\n    </div>\n    <div class=\"metrics\">\n      HP {hp}, OD {od}\n    </div>\n  </div>\n  <div class=\"category\">{category}</div>\n  <div class=\"counts\">\n    {counts.notes.total} notes<br />({counts.notes.rice} rice, {counts.notes.ln} LNs)<br />\n    {counts.bpm} BPM events<br />\n    {counts.sv} SV events<br />\n    {counts.notes.single} singles<br />\n    {counts.notes.jump} jumps<br />\n    {counts.notes.hand} hands<br />\n    {counts.notes.quad} quads\n  </div>\n</div>\n\n<style>\n  .root {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    max-width: 800px;\n    border-bottom: 1px solid #eee;\n    position: relative;\n  }\n  .name {\n    font-weight: bold;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-width: 500px;\n  }\n  .metrics {\n    font-size: .8em;\n  }\n  .title {\n    flex: 1;\n  }\n  .category {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    text-transform: uppercase;\n  }\n  .counts {\n    font-size: .9em;\n    margin-left: 1em;\n    text-align: right;\n  }\n  @media (max-width: 600px) {\n    .category {\n      position: initial;\n    }\n    .counts {\n      display: none;\n    }\n  }\n</style>",
    "<script>\n  export let id;\n  export let name;\n  export let avatar;\n  export let country;\n  export let pp;\n  export let rank;\n  export let countryRank;\n</script>\n\n<div class=\"root\">\n  <div class=\"avatar\">\n    <img src={avatar} alt=\"\" />\n  </div>\n  <div class=\"name\">\n    <a href={`https://osu.ppy.sh/users/${id}`} target=\"_blank\">\n      {name}\n    </a>\n  </div>\n  <div class=\"info\">\n    #{rank} ({pp} pp)<br />\n    {country} (#{countryRank})\n  </div>\n</div>\n\n<style>\n  .root {\n    height: 4em;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    max-width: 800px;\n    border-bottom: 1px solid #eee;\n  }\n  .avatar {\n    width: 3.5em;\n    height: 3.5em;\n    margin-right: 1em;\n  }\n  .avatar img {\n    border-radius: 50%;\n  }\n  .name {\n    font-size: 1.5em;\n    flex: 1;\n  }\n  .info {\n    margin-left: 1em;\n    text-align: right;\n  }\n</style>",
    "<script>\n  export let player;\n  export let roll;\n  export let index;\n</script>\n\n<div class=\"root\">\n  <div class=\"name\">\n    {index}.\n    <a href={`https://osu.ppy.sh/users/${player.id}`} target=\"_blank\">\n      {player.name}\n    </a>\n  </div>\n  <div class=\"roll\">{roll}</div>\n</div>\n\n<style>\n  .root {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    max-width: 800px;\n    border-bottom: 1px solid #eee;\n  }\n  .name {\n    font-size: 1.5em;\n    flex: 1;\n  }\n  .roll {\n    width: 4em;\n    margin-left: 1em;\n    font-size: 1.5em;\n    text-align: right;\n  }\n</style>",
    "<script>\n  export let player;\n  export let score;\n  export let combo;\n  export let counts;\n  export let index;\n</script>\n\n<div class=\"root\">\n  <div class=\"name\">\n    {index}.\n    <a href={`https://osu.ppy.sh/users/${player.id}`} target=\"_blank\">\n      {player.name}\n    </a>\n  </div>\n  <div class=\"info\">\n    <div class=\"combo\">{combo} max combo</div>\n    <div class=\"counts\">\n      {counts.max} |\n      {counts[300]} |\n      {counts[200]} |\n      {counts[100]} |\n      {counts[50]} |\n      {counts.miss}\n    </div>\n  </div>\n  <div class=\"score\">{score.toLocaleString()}</div>\n</div>\n\n<style>\n  .root {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    max-width: 800px;\n    border-bottom: 1px solid #eee;\n  }\n  .name {\n    font-size: 1.5em;\n    flex: 1;\n  }\n  .info {\n    margin-left: 1em;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n  }\n  .score {\n    width: 4em;\n    margin-left: 1em;\n    font-size: 1.5em;\n    text-align: right;\n  }\n  .counts {\n    font-size: .8em;\n  }\n\n  @media (max-width: 600px) {\n    .root {\n      flex-direction: column;\n    }\n    .info {\n      order: 2;\n      align-items: center;\n    }\n    .score {\n      order: 1;\n      text-align: center;\n    }\n  }\n</style>",
    "<script>\n  export let name;\n  export let mapCount;\n  export let href;\n</script>\n\n<div class=\"root\">\n  <div class=\"name\">\n    <a href={href}>\n      {name}\n    </a>\n  </div>\n  <div class=\"maps\">{mapCount}&nbsp;maps</div>\n</div>\n\n<style>\n  .root {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    max-width: 800px;\n    border-bottom: 1px solid #eee;\n  }\n  .name {\n    font-size: 1.5em;\n  }\n  .maps {\n    margin-left: 1em;\n  }\n</style>",
    "<script>\n  export let name;\n  export let id;\n  export let playersCount;\n</script>\n\n<div class=\"root\">\n  <div class=\"name\">\n    <a href={`#/tournaments/${id}`}>\n      {name}\n    </a>\n  </div>\n  <div class=\"players\">{playersCount}&nbsp;players</div>\n</div>\n\n<style>\n  .root {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    max-width: 800px;\n    border-bottom: 1px solid #eee;\n  }\n  .name {\n    font-size: 1.5em;\n  }\n  .players {\n    margin-left: 1em;\n  }\n</style>",
    "<script>\n  import PlayerRow from '../molecules/PlayerRow.svelte';\n\n  export let players;\n  export let sort = 'rank';\n  let sortedPlayers;\n\n  $: {\n    if (sort === 'rank') {\n      sortedPlayers = sortByRank(players);\n    } else {\n      sortedPlayers = sortByAlphabetical(players);\n    }\n  }\n\n  const sortByAlphabetical = players => players.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1);\n  const sortByRank = players => players.sort((a, b) => a.rank < b.rank ? -1 : 1);\n\n  function handleAlphabeticalSort() {\n    sortedPlayers = sortByAlphabetical(players);\n  }\n\n  function handleRankSort() {\n    sortedPlayers = sortByRank(players);\n  }\n</script>\n\n<div class=\"root\">\n  <button on:click={handleAlphabeticalSort}>Alphabetical</button>\n  <button on:click={handleRankSort}>Rank</button>\n  <div class=\"players\">\n    {#each sortedPlayers as player}\n      <PlayerRow {...player} />\n    {/each}\n  </div>\n</div>\n\n<style>\n  .players > :global(*) {\n    margin: .5em 0;\n  }\n</style>",
    "<script>\n  import RollRow from '../molecules/RollRow.svelte';\n\n  export let players;\n  export let rolls;\n  \n  let rollsArray = [];\n  let count = 0;\n  let sum = 0;\n  Object.keys(rolls).forEach(playerId => {\n    rolls[playerId].forEach(roll => {\n      ++count;\n      sum += roll;\n      rollsArray.push({\n        player: players[playerId],\n        value: roll\n      });\n    });\n  });\n  const average = (sum / count).toFixed(2);\n  rollsArray = rollsArray.sort((a, b) => a.value < b.value ? 1 : -1);\n  rollsArray.forEach((roll, i) => {\n    roll.index = i && rollsArray[i-1].value === roll.value ? rollsArray[i-1].index : i+1;\n  });\n</script>\n\n<div class=\"root\">\n  {#each rollsArray as roll}\n    <RollRow\n      index={roll.index}\n      player={roll.player}\n      roll={roll.value}\n    />\n  {/each}\n</div>\n\n<style>\n  .root {\n    margin-bottom: 1em;\n  }\n</style>",
    "<script>\n  import ScoreRow from '../molecules/ScoreRow.svelte';\n\n  export let players;\n  export let scores;\n  export let bans;\n  export let matchCount;\n  let groupScores = true;\n  let displayScores = true;\n\n  const playerScores = {};\n  const rankedPlayers = [];\n  let average = 0;\n  scores.forEach(score => {\n    // Ignore scores from non-tournament players\n    if (!players[score.userId]) return;\n    // The scores are already sorted beforehand,\n    // so the pushed player scores should also end up sorted\n    if (!playerScores[score.userId]) {\n      playerScores[score.userId] = [];\n      rankedPlayers.push({\n        player: players[score.userId],\n        // This is the reference to the array,\n        // so we can just keep using the map to look for players below.\n        scores: playerScores[score.userId]\n      });\n    }\n    average += score.score;\n    playerScores[score.userId].push(score);\n  });\n  average /= scores.length;\n\n  // Group bans\n  const groupedBans = {};\n  if (bans) {\n    bans.forEach(playerId => {\n      if (!players[playerId]) return;\n      if (!groupedBans[playerId]) groupedBans[playerId] = 0;\n      ++groupedBans[playerId];\n    });\n  }\n\n  function handleGroup() {\n    groupScores = !groupScores;\n  }\n\n  function handleToggle() {\n    displayScores = !displayScores;\n  }\n</script>\n\n<div class=\"root\">\n  <div class=\"stats\">\n    <div class=\"average\">\n      Average score: <b>{average ? average.toFixed(0) : 'N/A'}</b>\n    </div>\n    {#if bans}\n      <div class=\"picks\">\n        Picked <b>{scores.length / 2}/{matchCount}</b> ({(50 * scores.length / matchCount).toFixed(2)}%) times\n      </div>\n      <div class=\"bans\">\n        Banned <b>{bans.length}/{matchCount}</b> times{#if bans.length}{' by:'}{/if}\n        {#each Object.keys(groupedBans) as playerId, i}\n          {#if i},{/if}\n          <span>{\n            players[playerId].name\n            + (groupedBans[playerId] > 1 ? ` (${groupedBans[playerId]}x)` : '')\n          }</span>\n        {/each}\n      </div>\n      <div class=\"relevancy\">\n        Relevancy rate: <b>{bans.length + scores.length / 2}/{matchCount}</b> ({(100 * (bans.length + scores.length / 2) / matchCount).toFixed(2)}%)\n      </div>\n    {/if}\n  </div>\n  <button on:click={handleToggle}>{displayScores ? 'Hide' : 'Show'} scores</button>\n  <button on:click={handleGroup}>{groupScores ? 'Show all player scores' : 'Only best scores'}</button>\n  {#if displayScores}\n    <div class=\"scores\">\n      {#if groupScores}\n        {#each rankedPlayers as { player, scores }, i}\n          <ScoreRow index={i+1} player={player} {...scores[0]} />\n        {/each}\n      {:else}\n        {#each scores as score, i}\n          {#if players[score.userId]}\n            <ScoreRow index={i+1} player={players[score.userId]} {...score} />\n          {/if}\n        {/each}\n      {/if}\n    </div>\n  {/if}\n</div>\n\n<style>\n  .scores {\n    margin-top: .5em;\n  }\n  .stats {\n    margin-bottom: 1em;\n  }\n</style>",
    "<script>\n  import { onMount } from 'svelte';\n  import { tournament, stage } from '../stores';\n  import RollList from '../components/organisms/RollList.svelte';\n  import ScoreList from '../components/organisms/ScoreList.svelte';\n  import MapCard from '../components/molecules/MapCard.svelte';\n\n  export let id;\n  export let tournamentId;\n  let loading = true;\n\n  onMount(async () => {\n    if (!$tournament || $tournament.id != tournamentId) {\n      try {\n        tournament.set(null);\n        stage.set(null);\n        const res1 = await fetch(`data/${tournamentId}.json`);\n        tournament.set(await res1.json());\n        const res2 = await fetch(`data/${tournamentId}.${id}.json`);\n        stage.set(await res2.json());\n      } catch {\n        location.hash = '';\n      }\n    }\n    if (!$stage || $stage.id != id) {\n      try {\n        stage.set(null);\n        const res = await fetch(`data/${tournamentId}.${id}.json`);\n        stage.set(await res.json());\n      } catch {\n        location.hash = `#/tournaments/${tournamentId}`;\n      }\n    }\n    loading = false;\n  });\n</script>\n\n<main>\n  {#if !loading}\n    <a href={`#/tournaments/${tournamentId}`}>&lt;&nbsp;Back</a>\n    <h1>{$stage.name}</h1>\n    {#if $stage.rolls}\n      <h2>Rolls</h2>\n      <RollList rolls={$stage.rolls} players={$tournament.players} />\n    {/if}\n    <h2>{$stage.maps.length} maps</h2>\n    <div class=\"maps\">\n      {#each $stage.maps as map (map.beatmapId)}\n        <div class=\"map\">\n          <MapCard {...map} />\n          <ScoreList\n            players={$tournament.players}\n            scores={map.scores}\n            bans={map.bans}\n            matchCount={$stage.matchCount}\n          />\n        </div>\n      {/each}\n    </div>\n  {:else}\n    <p>Loading tournament data...</p>\n  {/if}\n</main>\n\n<style>\n  main {\n    margin: 2em;\n  }\n  .map {\n    margin: 1em 0 3em;\n  }\n  .map > :global(*) {\n    margin: 1em 0;\n  }\n</style>",
    "<script>\n  import { onMount } from 'svelte';\n  import { tournament } from '../stores';\n  import PlayerList from '../components/organisms/PlayerList.svelte';\n  import StageRow from '../components/molecules/StageRow.svelte';\n\n  export let id;\n\n  onMount(async () => {\n    if (!$tournament || $tournament.id != id) {\n      try {\n        tournament.set(null);\n        const res = await fetch(`data/${id}.json`);\n        tournament.set(await res.json());\n      } catch {\n        location.hash = '';\n      }\n    }\n  });\n</script>\n\n<main>\n  {#if $tournament}\n    <a href=\"#/\">&lt;&nbsp;Back</a>\n    <h1>{$tournament.name}</h1>\n    <h2>{$tournament.stages.length} stages</h2>\n    <div class=\"stages\">\n      {#each $tournament.stages as stage}\n        <StageRow {...stage} href={`#/tournaments/${id}/stages/${stage.id}`} />\n      {/each}\n    </div>\n    <h2>{Object.keys($tournament.players).length} players</h2>\n    <div class=\"players\">\n      <PlayerList players={Object.values($tournament.players)} />\n    </div>\n  {:else}\n    <p>Loading tournament data...</p>\n  {/if}\n</main>\n\n<style>\n  main {\n    margin: 2em;\n  }\n  .stages {\n    margin-bottom: 2em;\n  }\n  .stages > :global(*) {\n    margin: 1em 0;\n  }\n</style>",
    "<script>\n  import { onMount } from 'svelte';\n  import { tournaments } from '../stores';\n  import TournamentRow from '../components/molecules/TournamentRow.svelte';\n\n  onMount(async () => {\n    if (!$tournaments.length) {\n      const res = await fetch('data/tournaments.json');\n      tournaments.set(await res.json());\n    }\n  });\n</script>\n\n<main>\n  <h1>Welcome!</h1>\n  <p>Below are the available tournaments</p>\n  <div class=\"tournaments\">\n    {#each $tournaments as tournament}\n      <TournamentRow {...tournament} />\n    {:else}\n      <p>Loading tournaments...</p>\n    {/each}\n  </div>\n</main>\n\n<style>\n  main {\n    margin: 2em;\n  }\n  .tournaments > :global(*) {\n    margin: 1em 0;\n  }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}