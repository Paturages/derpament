{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../MapCard.svelte",
    "../PlayerRow.svelte",
    "../ScoreRow.svelte",
    "../StageRow.svelte",
    "../TournamentRow.svelte",
    "../ScoreList.svelte",
    "../Stage.svelte",
    "../Tournament.svelte",
    "../Tournaments.svelte"
  ],
  "sourcesContent": [
    "<script>\n  export let title;\n  export let artist;\n  export let mapper;\n  export let difficulty;\n  export let beatmapId;\n  export let beatmapSetId;\n  export let hp;\n  export let od;\n  export let category;\n  export let counts;\n</script>\n\n<div class=\"root\">\n  <div class=\"title\">\n    <a href={`https://osu.ppy.sh/beatmapsets/${beatmapSetId}#mania/${beatmapId}`} target=\"_blank\">\n      <div class=\"artist\">{artist}</div>\n      <div class=\"name\" title={title}>{title}</div>\n    </a>\n    <div class=\"mapper\">\n      <b>[{difficulty}]</b><br />beatmap set by <b>{mapper}</b>\n    </div>\n    <div class=\"metrics\">\n      HP {hp}, OD {od}\n    </div>\n  </div>\n  <div class=\"category\">{category}</div>\n  <div class=\"counts\">\n    {counts.notes.total} notes<br />({counts.notes.rice} rice, {counts.notes.ln} LNs)<br />\n    {counts.bpm} BPM events<br />\n    {counts.sv} SV events<br />\n    {counts.notes.single} singles<br />\n    {counts.notes.jump} jumps<br />\n    {counts.notes.hand} hands<br />\n    {counts.notes.quad} quads\n  </div>\n</div>\n\n<style>\n  .root {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    max-width: 800px;\n    border-bottom: 1px solid #eee;\n    position: relative;\n  }\n  .name {\n    font-size: 1.5em;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-width: 500px;\n  }\n  .metrics {\n    font-size: .8em;\n  }\n  .title {\n    flex: 1;\n  }\n  .category {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    text-transform: uppercase;\n  }\n  .counts {\n    font-size: .9em;\n    margin-left: 1em;\n    text-align: right;\n  }\n</style>",
    "<script>\n  export let id;\n  export let name;\n  export let avatar;\n  export let country;\n  export let pp;\n  export let rank;\n  export let countryRank;\n</script>\n\n<div class=\"root\">\n  <div class=\"avatar\">\n    <img src={avatar} alt=\"\" />\n  </div>\n  <div class=\"name\">\n    <a href={`https://osu.ppy.sh/users/${id}`} target=\"_blank\">\n      {name}\n    </a>\n  </div>\n  <div class=\"info\">\n    #{rank} ({pp} pp)<br />\n    {country} (#{countryRank})\n  </div>\n</div>\n\n<style>\n  .root {\n    height: 4em;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    max-width: 800px;\n    border-bottom: 1px solid #eee;\n  }\n  .avatar {\n    width: 3.5em;\n    height: 3.5em;\n    margin-right: 1em;\n  }\n  .avatar img {\n    border-radius: 50%;\n  }\n  .name {\n    font-size: 1.5em;\n    flex: 1;\n  }\n  .info {\n    margin-left: 1em;\n    text-align: right;\n  }\n</style>",
    "<script>\n  export let player;\n  export let score;\n  export let combo;\n  export let counts;\n</script>\n\n<div class=\"root\">\n  <div class=\"name\">\n    <a href={`https://osu.ppy.sh/users/${player.id}`} target=\"_blank\">\n      {player.name}\n    </a>\n  </div>\n  <div class=\"info\">\n    <div class=\"combo\">{combo} max combo</div>\n    <div class=\"counts\">\n      {counts.max} /\n      {counts[300]} /\n      {counts[200]} /\n      {counts[100]} /\n      {counts[50]} /\n      {counts.miss}\n    </div>\n  </div>\n  <div class=\"score\">{score.toLocaleString()}</div>\n</div>\n\n<style>\n  .root {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    max-width: 800px;\n    border-bottom: 1px solid #eee;\n  }\n  .name {\n    font-size: 1.5em;\n    flex: 1;\n  }\n  .info {\n    margin-left: 1em;\n    text-align: right;\n  }\n  .score {\n    width: 4em;\n    margin-left: 1em;\n    font-size: 1.5em;\n    text-align: right;\n  }\n</style>",
    "<script>\n  export let name;\n  export let mapCount;\n  export let href;\n</script>\n\n<div class=\"root\">\n  <div class=\"name\">\n    <a href={href}>\n      {name}\n    </a>\n  </div>\n  <div class=\"maps\">{mapCount}&nbsp;maps</div>\n</div>\n\n<style>\n  .root {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    max-width: 800px;\n    border-bottom: 1px solid #eee;\n  }\n  .name {\n    font-size: 1.5em;\n  }\n  .maps {\n    margin-left: 1em;\n  }\n</style>",
    "<script>\n  export let name;\n  export let id;\n  export let playersCount;\n</script>\n\n<div class=\"root\">\n  <div class=\"name\">\n    <a href={`#/tournaments/${id}`}>\n      {name}\n    </a>\n  </div>\n  <div class=\"players\">{playersCount}&nbsp;players</div>\n</div>\n\n<style>\n  .root {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    max-width: 800px;\n    border-bottom: 1px solid #eee;\n  }\n  .name {\n    font-size: 1.5em;\n  }\n  .players {\n    margin-left: 1em;\n  }\n</style>",
    "<script>\n  import ScoreRow from '../molecules/ScoreRow.svelte';\n\n  export let players;\n  export let scores;\n  let displayScores = false;\n\n  function handleToggle() {\n    displayScores = !displayScores;\n  }\n</script>\n\n<div class=\"root\">\n  <button on:click={handleToggle}>{displayScores ? 'Hide' : 'Show'} all scores</button>\n  {#if displayScores}\n    <div class=\"scores\">\n      {#each scores as score}\n        {#if players[score.userId]}\n          <ScoreRow player={players[score.userId]} {...score} />\n        {/if}\n      {/each}\n    </div>\n  {/if}\n</div>\n\n<style>\n  .scores > :global(*) {\n    margin: 1em 0;\n  }\n</style>",
    "<script>\n  import { onMount } from 'svelte';\n  import { tournament, stage } from '../stores';\n  import ScoreList from '../components/organisms/ScoreList.svelte';\n  import MapCard from '../components/molecules/MapCard.svelte';\n\n  export let id;\n  export let tournamentId;\n\n  onMount(async () => {\n    if (!$tournament || $tournament.id != id) {\n      try {\n        const res = await fetch(`data/${tournamentId}.json`);\n        tournament.set(await res.json());\n      } catch {\n        location.hash = '';\n      }\n    }\n    if (!$stage || $stage.id != id) {\n      try {\n        const res = await fetch(`data/${tournamentId}.${id}.json`);\n        stage.set(await res.json());\n      } catch {\n        location.hash = `#/tournaments/${tournamentId}`;\n      }\n    }\n  });\n</script>\n\n<main>\n  {#if $stage}\n    <a href={`#/tournaments/${tournamentId}`}>&lt;&nbsp;Back</a>\n    <h1>{$stage.name}</h1>\n    <h2>{$stage.maps.length} maps</h2>\n    <div class=\"maps\">\n      {#each $stage.maps as map}\n        <div class=\"map\">\n          <MapCard {...map} />\n          <ScoreList players={$tournament.players} scores={map.scores} />\n        </div>\n      {/each}\n    </div>\n  {:else}\n    <p>Loading tournament data...</p>\n  {/if}\n</main>\n\n<style>\n  main {\n    margin: 2em;\n  }\n  .map {\n    margin: 1em 0 3em;\n  }\n  .map > :global(*) {\n    margin: 1em 0;\n  }\n</style>",
    "<script>\n  import { onMount } from 'svelte';\n  import { tournament } from '../stores';\n  import StageRow from '../components/molecules/StageRow.svelte';\n  import PlayerRow from '../components/molecules/PlayerRow.svelte';\n\n  export let id;\n\n  onMount(async () => {\n    if (!$tournament || $tournament.id != id) {\n      try {\n        const res = await fetch(`data/${id}.json`);\n        tournament.set(await res.json());\n      } catch {\n        location.hash = '';\n      }\n    }\n  });\n</script>\n\n<main>\n  {#if $tournament}\n    <a href=\"#/\">&lt;&nbsp;Back</a>\n    <h1>{$tournament.name}</h1>\n    <h2>{$tournament.stages.length} stages</h2>\n    <div class=\"stages\">\n      {#each $tournament.stages as stage}\n        <StageRow {...stage} href={`#/tournaments/${id}/stages/${stage.id}`} />\n      {/each}\n    </div>\n    <h2>{Object.keys($tournament.players).length} players</h2>\n    <div class=\"players\">\n      {#each Object.values($tournament.players) as player}\n        <PlayerRow {...player} />\n      {/each}\n    </div>\n  {:else}\n    <p>Loading tournament data...</p>\n  {/if}\n</main>\n\n<style>\n  main {\n    margin: 2em;\n  }\n  .stages {\n    margin-bottom: 2em;\n  }\n  .stages > :global(*) {\n    margin: 1em 0;\n  }\n</style>",
    "<script>\n  import { onMount } from 'svelte';\n  import { tournaments } from '../stores';\n  import TournamentRow from '../components/molecules/TournamentRow.svelte';\n\n  onMount(async () => {\n    if (!$tournaments.length) {\n      const res = await fetch('data/tournaments.json');\n      tournaments.set(await res.json());\n    }\n  });\n</script>\n\n<main>\n  <h1>Welcome!</h1>\n  <p>Below are the available tournaments</p>\n  <div class=\"tournaments\">\n    {#each $tournaments as tournament}\n      <TournamentRow {...tournament} />\n    {:else}\n      <p>Loading tournaments...</p>\n    {/each}\n  </div>\n</main>\n\n<style>\n  main {\n    margin: 2em;\n  }\n  .tournaments > :global(*) {\n    margin: 1em 0;\n  }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}