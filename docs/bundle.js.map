{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../frontend/stores.js","../frontend/components/organisms/Header.svelte","../frontend/components/molecules/RollRow.svelte","../frontend/components/organisms/RollList.svelte","../frontend/components/molecules/ScoreRow.svelte","../frontend/components/organisms/ScoreList.svelte","../frontend/components/molecules/MapCard.svelte","../frontend/pages/Stage.svelte","../frontend/components/molecules/PlayerRow.svelte","../frontend/components/organisms/PlayerList.svelte","../frontend/components/molecules/StageRow.svelte","../frontend/pages/Tournament.svelte","../frontend/components/molecules/TournamentRow.svelte","../frontend/pages/Tournaments.svelte","../frontend/App.svelte","../frontend/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.23.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\r\n\r\nexport const tournaments = writable([]);\r\nexport const tournament = writable(null);\r\nexport const stage = writable(null);\r\n","<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let backHref;\r\n\r\n  let timeout;\r\n  function handleSearch($event) {\r\n    // 500 ms debounce\r\n    if (timeout) clearTimeout(timeout);\r\n    timeout = setTimeout(\r\n      () => dispatch('search', $event.target.value),\r\n      500\r\n    );\r\n  }\r\n</script>\r\n\r\n<div class=\"root\">\r\n  <div class=\"inner\">\r\n    <a href={backHref}>&lt;&nbsp;Back</a>\r\n    <input\r\n      type=\"search\"\r\n      placeholder=\"Filter on players\"\r\n      on:input={handleSearch}\r\n    />\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .root {\r\n    background: var(--background-color);\r\n    padding: 1em;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n  }\r\n  .inner {\r\n    margin: 0 auto;\r\n    padding: 0 2em;\r\n    width: calc(100% - 1rem);\r\n    max-width: var(--max-body-width);\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n  }\r\n  .inner input {\r\n    margin-left: 1em;\r\n  }\r\n</style>","<script>\r\n  export let player;\r\n  export let roll;\r\n  export let index;\r\n</script>\r\n\r\n<div class=\"root\">\r\n  <div class=\"name\">\r\n    {index}.\r\n    <a href={`https://osu.ppy.sh/users/${player.id}`} target=\"_blank\">\r\n      {player.name}\r\n    </a>\r\n  </div>\r\n  <div class=\"roll\">{roll}</div>\r\n</div>\r\n\r\n<style>\r\n  .root {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    max-width: 800px;\r\n    border-bottom: 1px solid #eee;\r\n  }\r\n  .name {\r\n    font-size: 1.5em;\r\n    flex: 1;\r\n  }\r\n  .roll {\r\n    width: 4em;\r\n    margin-left: 1em;\r\n    font-size: 1.5em;\r\n    text-align: right;\r\n  }\r\n</style>","<script>\r\n  import RollRow from '../molecules/RollRow.svelte';\r\n\r\n  export let players;\r\n  export let rolls;\r\n  export let filter;\r\n  \r\n  let displayRolls = true;\r\n  let rollsArray = [];\r\n  let count = 0;\r\n  let sum = 0;\r\n  Object.keys(rolls).forEach(playerId => {\r\n    rolls[playerId].forEach(roll => {\r\n      ++count;\r\n      sum += roll;\r\n      rollsArray.push({\r\n        player: players[playerId],\r\n        value: roll\r\n      });\r\n    });\r\n  });\r\n  const average = (sum / count).toFixed(2);\r\n  rollsArray = rollsArray.sort((a, b) => a.value < b.value ? 1 : -1);\r\n  rollsArray.forEach((roll, i) => {\r\n    roll.index = i && rollsArray[i-1].value === roll.value ? rollsArray[i-1].index : i+1;\r\n  });\r\n  \r\n  function handleToggle() {\r\n    displayRolls = !displayRolls;\r\n  }\r\n</script>\r\n\r\n<div class=\"root\">\r\n  <button on:click={handleToggle}>{displayRolls ? 'Hide' : 'Show'} rolls</button>\r\n  {#if displayRolls}\r\n    <div class=\"rolls\">\r\n      {#each rollsArray as roll}\r\n        {#if !filter || roll.player.name.toLowerCase().includes(filter.toLowerCase())}\r\n          <RollRow\r\n            index={roll.index}\r\n            player={roll.player}\r\n            roll={roll.value}\r\n          />\r\n        {/if}\r\n      {/each}\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .rolls {\r\n    margin: 1em 0 2em;\r\n  }\r\n</style>","<script>\r\n  export let player;\r\n  export let score;\r\n  export let combo;\r\n  export let counts;\r\n  export let index;\r\n</script>\r\n\r\n<div class=\"root\">\r\n  <div class=\"name\">\r\n    {index}.\r\n    <a href={`https://osu.ppy.sh/users/${player.id}`} target=\"_blank\">\r\n      {player.name}\r\n    </a>\r\n  </div>\r\n  <div class=\"info\">\r\n    <div class=\"combo\">{combo} max combo</div>\r\n    <div class=\"counts\">\r\n      {counts.max} |\r\n      {counts[300]} |\r\n      {counts[200]} |\r\n      {counts[100]} |\r\n      {counts[50]} |\r\n      {counts.miss}\r\n    </div>\r\n  </div>\r\n  <div class=\"score\">{score.toLocaleString()}</div>\r\n</div>\r\n\r\n<style>\r\n  .root {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    max-width: 800px;\r\n    border-bottom: 1px solid #eee;\r\n  }\r\n  .name {\r\n    font-size: 1.5em;\r\n    flex: 1;\r\n  }\r\n  .info {\r\n    margin-left: 1em;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n  }\r\n  .score {\r\n    width: 4em;\r\n    margin-left: 1em;\r\n    font-size: 1.5em;\r\n    text-align: right;\r\n  }\r\n  .counts {\r\n    font-size: .8em;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    .root {\r\n      flex-direction: column;\r\n    }\r\n    .info {\r\n      order: 2;\r\n      align-items: center;\r\n    }\r\n    .score {\r\n      order: 1;\r\n      text-align: center;\r\n    }\r\n  }\r\n</style>","<script>\r\n  import ScoreRow from '../molecules/ScoreRow.svelte';\r\n\r\n  export let players;\r\n  export let scores;\r\n  export let bans;\r\n  export let pickCount;\r\n  export let matchCount;\r\n  export let filter;\r\n  let groupScores = true;\r\n  let displayScores = true;\r\n\r\n  const playerScores = {};\r\n  const rankedPlayers = [];\r\n  let average = 0;\r\n  scores.forEach(score => {\r\n    // Ignore scores from non-tournament players\r\n    if (!players[score.userId]) return;\r\n    // The scores are already sorted beforehand,\r\n    // so the pushed player scores should also end up sorted\r\n    if (!playerScores[score.userId]) {\r\n      playerScores[score.userId] = [];\r\n      rankedPlayers.push({\r\n        player: players[score.userId],\r\n        // This is the reference to the array,\r\n        // so we can just keep using the map to look for players below.\r\n        scores: playerScores[score.userId]\r\n      });\r\n    }\r\n    average += score.score;\r\n    playerScores[score.userId].push(score);\r\n  });\r\n  average /= scores.length;\r\n\r\n  // Group bans\r\n  const groupedBans = {};\r\n  if (bans) {\r\n    bans.forEach(playerId => {\r\n      if (!players[playerId]) return;\r\n      if (!groupedBans[playerId]) groupedBans[playerId] = 0;\r\n      ++groupedBans[playerId];\r\n    });\r\n  }\r\n\r\n  function handleGroup() {\r\n    groupScores = !groupScores;\r\n  }\r\n\r\n  function handleToggle() {\r\n    displayScores = !displayScores;\r\n  }\r\n</script>\r\n\r\n<div class=\"root\">\r\n  <div class=\"stats\">\r\n    <div class=\"average\">\r\n      Average score: <b>{average ? average.toFixed(0) : 'N/A'}</b>\r\n    </div>\r\n    {#if bans}\r\n      <div class=\"picks\">\r\n        Picked <b>{pickCount}/{matchCount}</b> ({(100 * pickCount / matchCount).toFixed(2)}%) times\r\n      </div>\r\n      <div class=\"bans\">\r\n        Banned <b>{bans.length}/{matchCount}</b>\r\n        ({(100 * bans.length / matchCount).toFixed(2)}%)\r\n        times{#if bans.length}{' by:'}{/if}\r\n        {#each Object.keys(groupedBans) as playerId, i}\r\n          {#if i},{/if}\r\n          <span class={filter && players[playerId].name.toLowerCase().includes(filter.toLowerCase()) && 'ban-highlighted'}>{\r\n            players[playerId].name\r\n            + (groupedBans[playerId] > 1 ? ` (${groupedBans[playerId]}x)` : '')\r\n          }</span>\r\n        {/each}\r\n      </div>\r\n      <div class=\"relevancy\">\r\n        Relevancy: <b>{bans.length + pickCount}/{matchCount}</b> ({(100 * (bans.length + pickCount) / matchCount).toFixed(2)}%)\r\n      </div>\r\n    {/if}\r\n  </div>\r\n  <button on:click={handleToggle}>{displayScores ? 'Hide' : 'Show'} scores</button>\r\n  <button on:click={handleGroup}>{groupScores ? 'Show all player scores' : 'Only best scores'}</button>\r\n  {#if displayScores}\r\n    <div class=\"scores\">\r\n      {#if groupScores}\r\n        {#each rankedPlayers as { player, scores }, i}\r\n          {#if !filter || player.name.toLowerCase().includes(filter.toLowerCase())}\r\n            <ScoreRow index={i+1} player={player} {...scores[0]} />\r\n          {/if}\r\n        {/each}\r\n      {:else}\r\n        {#each scores as score, i}\r\n          {#if players[score.userId]\r\n            && (!filter || players[score.userId].name.toLowerCase().includes(filter.toLowerCase()))\r\n          }\r\n            <ScoreRow index={i+1} player={players[score.userId]} {...score} />\r\n          {/if}\r\n        {/each}\r\n      {/if}\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .scores {\r\n    margin-top: .5em;\r\n  }\r\n  .stats {\r\n    margin-bottom: 1em;\r\n  }\r\n  .ban-highlighted {\r\n    text-decoration: underline;\r\n    color: #ffb300;\r\n    font-weight: bold;\r\n  }\r\n</style>","<script>\r\n  export let title;\r\n  export let artist;\r\n  export let mapper;\r\n  export let difficulty;\r\n  export let beatmapId;\r\n  export let beatmapSetId;\r\n  export let hp;\r\n  export let od;\r\n  export let category;\r\n  export let counts;\r\n</script>\r\n\r\n<div class=\"root\">\r\n  <div class=\"title\">\r\n    <a href={`https://osu.ppy.sh/beatmapsets/${beatmapSetId}#mania/${beatmapId}`} target=\"_blank\">\r\n      <div class=\"artist\">{artist}</div>\r\n      <div class=\"name\" title={title}>{title}</div>\r\n    </a>\r\n    <div class=\"mapper\">\r\n      <b>[{difficulty}]</b><br />beatmap set by <b>{mapper}</b>\r\n    </div>\r\n    <div class=\"metrics\">\r\n      HP {hp}, OD {od}\r\n    </div>\r\n  </div>\r\n  <div class=\"category\">{category}</div>\r\n  <div class=\"counts\">\r\n    {counts.notes.total} notes<br />({counts.notes.rice} rice, {counts.notes.ln} LNs)<br />\r\n    {counts.bpm} BPM events<br />\r\n    {counts.sv} SV events<br />\r\n    {counts.notes.single} singles<br />\r\n    {counts.notes.jump} jumps<br />\r\n    {counts.notes.hand} hands<br />\r\n    {counts.notes.quad} quads\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .root {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    max-width: 800px;\r\n    border-bottom: 1px solid #eee;\r\n    position: relative;\r\n  }\r\n  .name {\r\n    font-weight: bold;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    max-width: 500px;\r\n  }\r\n  .metrics {\r\n    font-size: .8em;\r\n  }\r\n  .title {\r\n    flex: 1;\r\n  }\r\n  .category {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    text-transform: uppercase;\r\n  }\r\n  .counts {\r\n    font-size: .9em;\r\n    margin-left: 1em;\r\n    text-align: right;\r\n  }\r\n  @media (max-width: 600px) {\r\n    .category {\r\n      position: initial;\r\n    }\r\n    .counts {\r\n      display: none;\r\n    }\r\n  }\r\n</style>","<script>\r\n  import { onMount } from 'svelte';\r\n  import { tournament, stage } from '../stores';\r\n  import Header from '../components/organisms/Header.svelte';\r\n  import RollList from '../components/organisms/RollList.svelte';\r\n  import ScoreList from '../components/organisms/ScoreList.svelte';\r\n  import MapCard from '../components/molecules/MapCard.svelte';\r\n\r\n  export let id;\r\n  export let tournamentId;\r\n  let loading = true;\r\n  let filter = null;\r\n\r\n  function handleSearch(event) {\r\n    filter = event.detail;\r\n  }\r\n\r\n  onMount(async () => {\r\n    if (!$tournament || $tournament.id != tournamentId) {\r\n      try {\r\n        tournament.set(null);\r\n        stage.set(null);\r\n        const res1 = await fetch(`data/${tournamentId}.json`);\r\n        tournament.set(await res1.json());\r\n        const res2 = await fetch(`data/${tournamentId}.${id}.json`);\r\n        stage.set(await res2.json());\r\n      } catch {\r\n        location.hash = '';\r\n      }\r\n    }\r\n    if (!$stage || $stage.id != id) {\r\n      try {\r\n        stage.set(null);\r\n        const res = await fetch(`data/${tournamentId}.${id}.json`);\r\n        stage.set(await res.json());\r\n      } catch {\r\n        location.hash = `#/tournaments/${tournamentId}`;\r\n      }\r\n    }\r\n    loading = false;\r\n  });\r\n</script>\r\n\r\n<main>\r\n  {#if !loading}\r\n    <Header backHref={`#/tournaments/${tournamentId}`} on:search={handleSearch} />\r\n    <h1>{$stage.name}</h1>\r\n    {#if $stage.rolls}\r\n      <h2>Rolls</h2>\r\n      <RollList\r\n        rolls={$stage.rolls}\r\n        players={$tournament.players}\r\n        {filter}\r\n      />\r\n    {/if}\r\n    <h2>{$stage.maps.length} maps</h2>\r\n    <div class=\"maps\">\r\n      {#each $stage.maps as map (map.beatmapId)}\r\n        <div class=\"map\">\r\n          <MapCard {...map} />\r\n          <ScoreList\r\n            players={$tournament.players}\r\n            scores={map.scores}\r\n            bans={map.bans}\r\n            pickCount={map.pickCount}\r\n            matchCount={$stage.matchCount}\r\n            {filter}\r\n          />\r\n        </div>\r\n      {/each}\r\n    </div>\r\n  {:else}\r\n    <p>Loading tournament data...</p>\r\n  {/if}\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    padding-top: 1em;\r\n    margin: 2em;\r\n  }\r\n  .map {\r\n    margin: 1em 0 3em;\r\n  }\r\n  .map > :global(*) {\r\n    margin: 1em 0;\r\n  }\r\n</style>","<script>\r\n  export let id;\r\n  export let name;\r\n  export let avatar;\r\n  export let country;\r\n  export let pp;\r\n  export let rank;\r\n  export let countryRank;\r\n</script>\r\n\r\n<div class=\"root\">\r\n  <div class=\"avatar\">\r\n    <img src={avatar} alt=\"\" />\r\n  </div>\r\n  <div class=\"name\">\r\n    <a href={`https://osu.ppy.sh/users/${id}`} target=\"_blank\">\r\n      {name}\r\n    </a>\r\n  </div>\r\n  <div class=\"info\">\r\n    #{rank} ({pp} pp)<br />\r\n    {country} (#{countryRank})\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .root {\r\n    height: 4em;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    max-width: 800px;\r\n    border-bottom: 1px solid #eee;\r\n  }\r\n  .avatar {\r\n    width: 3.5em;\r\n    height: 3.5em;\r\n    margin-right: 1em;\r\n  }\r\n  .avatar img {\r\n    border-radius: 50%;\r\n  }\r\n  .name {\r\n    font-size: 1.5em;\r\n    flex: 1;\r\n  }\r\n  .info {\r\n    margin-left: 1em;\r\n    text-align: right;\r\n  }\r\n</style>","<script>\r\n  import PlayerRow from '../molecules/PlayerRow.svelte';\r\n\r\n  export let players;\r\n  export let sort = 'rank';\r\n  let sortedPlayers;\r\n\r\n  $: {\r\n    if (sort === 'rank') {\r\n      sortedPlayers = sortByRank(players);\r\n    } else {\r\n      sortedPlayers = sortByAlphabetical(players);\r\n    }\r\n  }\r\n\r\n  const sortByAlphabetical = players => players.sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1);\r\n  const sortByRank = players => players.sort((a, b) => a.rank < b.rank ? -1 : 1);\r\n\r\n  function handleAlphabeticalSort() {\r\n    sortedPlayers = sortByAlphabetical(players);\r\n  }\r\n\r\n  function handleRankSort() {\r\n    sortedPlayers = sortByRank(players);\r\n  }\r\n</script>\r\n\r\n<div class=\"root\">\r\n  <button on:click={handleAlphabeticalSort}>Alphabetical</button>\r\n  <button on:click={handleRankSort}>Rank</button>\r\n  <div class=\"players\">\r\n    {#each sortedPlayers as player}\r\n      <PlayerRow {...player} />\r\n    {/each}\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .players > :global(*) {\r\n    margin: .5em 0;\r\n  }\r\n</style>","<script>\r\n  export let name;\r\n  export let mapCount;\r\n  export let href;\r\n</script>\r\n\r\n<div class=\"root\">\r\n  <div class=\"name\">\r\n    <a href={href}>\r\n      {name}\r\n    </a>\r\n  </div>\r\n  <div class=\"maps\">{mapCount}&nbsp;maps</div>\r\n</div>\r\n\r\n<style>\r\n  .root {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    max-width: 800px;\r\n    border-bottom: 1px solid #eee;\r\n  }\r\n  .name {\r\n    font-size: 1.5em;\r\n  }\r\n  .maps {\r\n    margin-left: 1em;\r\n  }\r\n</style>","<script>\r\n  import { onMount } from 'svelte';\r\n  import { tournament } from '../stores';\r\n  import Header from '../components/organisms/Header.svelte';\r\n  import PlayerList from '../components/organisms/PlayerList.svelte';\r\n  import StageRow from '../components/molecules/StageRow.svelte';\r\n\r\n  export let id;\r\n  let playerValues;\r\n  let displayPlayers;\r\n  let loading = true;\r\n\r\n  function handleSearch(event) {\r\n    const text = event.detail;\r\n    if (!text) displayPlayers = playerValues;\r\n    else {\r\n      displayPlayers = playerValues.filter(\r\n        player => player.name.toLowerCase().includes(text.toLowerCase())\r\n      );\r\n    }\r\n  }\r\n\r\n  onMount(async () => {\r\n    if (!$tournament || $tournament.id != id) {\r\n      try {\r\n        tournament.set(null);\r\n        const res = await fetch(`data/${id}.json`);\r\n        tournament.set(await res.json());\r\n      } catch {\r\n        location.hash = '';\r\n      }\r\n    }\r\n    playerValues = Object.values($tournament.players);\r\n    displayPlayers = playerValues;\r\n    loading = false;\r\n  });\r\n</script>\r\n\r\n<main>\r\n  {#if !loading}\r\n    <Header backHref=\"#/\" on:search={handleSearch} />\r\n    <h1>{$tournament.name}</h1>\r\n    <h2>{$tournament.stages.length} stages</h2>\r\n    <div class=\"stages\">\r\n      {#each $tournament.stages as stage}\r\n        <StageRow {...stage} href={`#/tournaments/${id}/stages/${stage.id}`} />\r\n      {/each}\r\n    </div>\r\n    <h2>{Object.keys($tournament.players).length} players</h2>\r\n    <div class=\"players\">\r\n      <PlayerList players={displayPlayers} />\r\n    </div>\r\n  {:else}\r\n    <p>Loading tournament data...</p>\r\n  {/if}\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    padding-top: 1em;\r\n    margin: 2em;\r\n  }\r\n  .stages {\r\n    margin-bottom: 2em;\r\n  }\r\n  .stages > :global(*) {\r\n    margin: 1em 0;\r\n  }\r\n</style>","<script>\r\n  export let name;\r\n  export let id;\r\n  export let playersCount;\r\n</script>\r\n\r\n<div class=\"root\">\r\n  <div class=\"name\">\r\n    <a href={`#/tournaments/${id}`}>\r\n      {name}\r\n    </a>\r\n  </div>\r\n  <div class=\"players\">{playersCount}&nbsp;players</div>\r\n</div>\r\n\r\n<style>\r\n  .root {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    max-width: 800px;\r\n    border-bottom: 1px solid #eee;\r\n  }\r\n  .name {\r\n    font-size: 1.5em;\r\n  }\r\n  .players {\r\n    margin-left: 1em;\r\n  }\r\n</style>","<script>\r\n  import { onMount } from 'svelte';\r\n  import { tournaments } from '../stores';\r\n  import TournamentRow from '../components/molecules/TournamentRow.svelte';\r\n\r\n  onMount(async () => {\r\n    if (!$tournaments.length) {\r\n      const res = await fetch('data/tournaments.json');\r\n      tournaments.set(await res.json());\r\n    }\r\n  });\r\n</script>\r\n\r\n<main>\r\n  <h1>Welcome!</h1>\r\n  <p>Below are the available tournaments</p>\r\n  <div class=\"tournaments\">\r\n    {#each $tournaments as tournament}\r\n      <TournamentRow {...tournament} />\r\n    {:else}\r\n      <p>Loading tournaments...</p>\r\n    {/each}\r\n  </div>\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    margin: 2em;\r\n  }\r\n  .tournaments > :global(*) {\r\n    margin: 1em 0;\r\n  }\r\n</style>","<script>\r\n  import { onMount, onDestroy } from 'svelte';\r\n  import Stage from './pages/Stage.svelte';\r\n  import Tournament from './pages/Tournament.svelte';\r\n  import Tournaments from './pages/Tournaments.svelte';\r\n\r\n  let url;\r\n  let tournamentId;\r\n  let stageId;\r\n\r\n  const onHashChange = () => {\r\n    url = location.hash.slice(1) || '/';\r\n    const [, p1, id1, p2, id2] = url.split('/');\r\n    tournamentId = p1 === 'tournaments' ? id1 : null;\r\n    stageId = p2 === 'stages' ? id2 : null;\r\n  };\r\n\r\n  onMount(() => {\r\n    onHashChange();\r\n    window.addEventListener('hashchange', onHashChange);\r\n  });\r\n\r\n  onDestroy(() => {\r\n    window.removeEventListener('hashchange', onHashChange);\r\n  });\r\n</script>\r\n\r\n{#if tournamentId && stageId}\r\n  <Stage id={stageId} tournamentId={tournamentId} />\r\n{:else if tournamentId}\r\n  <Tournament id={tournamentId} />\r\n{:else if url}\r\n  <Tournaments />\r\n{/if}","import App from \"./App.svelte\";\r\n\r\nconst app = new App({\r\n  target: document.body,\r\n});\r\n\r\nexport default app;\r\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","current_component","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","outro_and_destroy_block","lookup","key","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","undefined","get_spread_object","spread_props","create_component","mount_component","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","tournaments","tournament","stage","dispatch","timeout","backHref","$event","clearTimeout","setTimeout","id","player","roll","toLowerCase","includes","players","rolls","displayRolls","rollsArray","count","sum","keys","playerId","toFixed","sort","max","miss","toLocaleString","score","combo","counts","userId","scores","bans","pickCount","matchCount","groupScores","displayScores","playerScores","rankedPlayers","average","groupedBans","notes","total","rice","ln","bpm","sv","single","jump","hand","quad","title","artist","mapper","difficulty","beatmapId","beatmapSetId","hp","od","category","maps","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","Math","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","tournamentId","loading","$tournament","res1","fetch","json","res2","location","hash","$stage","res","avatar","country","pp","rank","countryRank","sortedPlayers","sortByAlphabetical","sortByRank","mapCount","href","stages","playerValues","displayPlayers","values","playersCount","$tournaments","url","stageId","onHashChange","p1","id1","p2","id2","split","window","body"],"mappings":"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"}